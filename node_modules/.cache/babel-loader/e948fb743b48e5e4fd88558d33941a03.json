{"ast":null,"code":"var _jsxFileName = \"/Users/hasanshaikh/Downloads/shasan419-me_buildout_xflix_react-master 2/frontend/src/Components/Home.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Header from \"./Header.js\";\nimport Dashboard from \"./Dashboard.js\";\nimport { config } from \"../App\";\nimport { Input, Button, Row, Col } from \"antd\";\nimport \"./Home.css\";\nimport moment from \"moment\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Form, Select, DatePicker, Modal } from \"antd\";\nimport { mdiSwapVertical } from \"@mdi/js\";\nimport Icon from \"@mdi/react\";\n// import UploadModal from \"./UploadModal\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n    this.handleOk = async values => {\n      console.log(values['video-link']);\n      console.log(values['thumbnail']);\n      console.log(values['age']);\n      console.log(values['title']);\n      const date = moment(values['date']).format(\"DD MMM YYYY\");\n      console.log(date);\n      this.setState({\n        confirmLoading: true\n      });\n      const res = await fetch(config.endpoint + \"/videos\", {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\"\n        },\n        body: JSON.stringify({\n          \"videoLink\": values['video-link'],\n          \"title\": values['title'],\n          \"genre\": values['genre'],\n          \"contentRating\": values['age'],\n          \"releaseDate\": date.toString(),\n          \"previewImage\": values['thumbnail']\n        })\n      }).then(res => {\n        this.setState({\n          visible: false,\n          confirmLoading: false\n        });\n        return res.json();\n      }).catch(error => console.log(error));\n      console.log(res);\n    };\n    this.handleCancel = e => {\n      console.log(e);\n      this.setState({\n        visible: false\n      });\n    };\n    // getData = async () => {\n    //   const res = await this.fetchVideos();\n    //   if (res) {\n    // this.allVideos = [...res.videos];\n    // this.videoData = [...res.videos];\n    // this.setState({\n    //   allVideoList:[...this.res.videos],\n    //   filteredVideos: [...this.res.videos],\n    // });\n    // console.log(\"allVideos :\", this.allVideoList);\n    // document.querySelectorAll('#content .active').forEach(function(item) {\n    //   item.classList.remove('active');\n    // })\n    // document.querySelectorAll('#genre .active').forEach(function(item) {\n    //   item.classList.remove('active');\n    // })\n    //   }\n    // };\n    // fetchVideos = async () => {\n    //   const resp = await fetch(config.endpoint + \"/videos\")\n    //     .then((res) => res.json())\n    //     .catch((error) => console.log(error));\n    //   console.log(resp);\n    //   if (!resp) {\n    //     return null;\n    //   } else {\n    //     return resp;\n    //   }\n    // };\n    this.getDashboard = data => {\n      return /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Dashboard, {\n          data: data,\n          allData: this.state.allVideoList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }, this)\n      }, data._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }, this);\n    };\n    //   ModalRef = ({showModal}) => {\n    //     this.showModal = showModal;\n    //  }\n    //  openModal = () => {\n    //    this.showModal();\n    //  }\n    this.handleSearchInput = async evt => {\n      console.log(evt.target.value);\n      let value = evt.target.value;\n      this.setState({\n        searchText: value\n      });\n      let filteredVideos = await this.state.allVideoList.filter(x => {\n        if (x.title.toLowerCase().includes(value.toLowerCase())) {\n          return x;\n        }\n      });\n      if (this.state.searchText.length === 0) {\n        filteredVideos = this.state.allVideoList;\n      }\n      this.setState({\n        videoList: filteredVideos\n      });\n    };\n    this.performAPICall = async () => {\n      var _this$state$searchTex;\n      let response;\n      let URL = `${config.endpoint}/videos`;\n      if (((_this$state$searchTex = this.state.searchText) === null || _this$state$searchTex === void 0 ? void 0 : _this$state$searchTex.length) > 0) {\n        console.log(\"both sortBy and search \", this.state.sortBy + \"   \" + this.state.searchText);\n        URL += `?title=${this.state.searchText}`;\n        URL += `&sortBy=${this.state.sortBy}`;\n      } else {\n        console.log(\"only sortBy \", this.state.sortBy);\n        URL += `?sortBy=${this.state.sortBy}`;\n      }\n      response = await fetch(URL);\n      if (!response.ok) {\n        return;\n      }\n      response = await response.json();\n      this.setState({\n        allVideoList: response.videos\n      });\n      let filteredVideos = await this.getFilteredVideosByGenre(response.videos, this.state.selectedGenres);\n      console.log(this.state.allVideoList);\n      this.setState({\n        videoList: filteredVideos\n      });\n      return filteredVideos;\n    };\n    this.handleGenreChange = async genre => {\n      this.setState({\n        selectedContentRatings: []\n      });\n      let selectedGenres = this.state.selectedGenres;\n      let uniqueFilters = new Set(selectedGenres);\n      selectedGenres = [...uniqueFilters];\n      if (genre.value === \"all\") {\n        if (selectedGenres.includes(genre.value)) {} else {\n          selectedGenres = [\"all\"];\n        }\n      } else {\n        if (this.state.selectedGenres.includes(genre.value)) {\n          selectedGenres = selectedGenres.filter(elem => elem !== \"all\" && elem !== genre.value);\n        } else {\n          selectedGenres = selectedGenres.filter(elem => elem !== \"all\");\n          selectedGenres.push(genre.value);\n        }\n      }\n      uniqueFilters = new Set(selectedGenres);\n      selectedGenres = [...uniqueFilters];\n      if (selectedGenres.length === 0) {\n        selectedGenres.push(\"all\");\n      }\n      this.setState({\n        selectedGenres\n      }, async () => {\n        let filteredVideos = await this.getFilteredVideosByGenre(this.state.allVideoList, this.state.selectedGenres);\n        this.setState({\n          videoList: filteredVideos\n        });\n      });\n      console.log(this.state.videoList);\n    };\n    this.handleContentRatingChange = async contentRating => {\n      this.setState({\n        selectedGenres: [\"all\"]\n      });\n      let selectedContentRatings = this.state.selectedContentRatings;\n      let uniqueFilters = new Set(selectedContentRatings);\n      selectedContentRatings = [...uniqueFilters];\n      if (this.state.selectedContentRatings.includes(contentRating.value)) {\n        selectedContentRatings = selectedContentRatings.filter(elem => elem !== contentRating.value);\n      } else {\n        selectedContentRatings.push(contentRating.value);\n      }\n      uniqueFilters = new Set(selectedContentRatings);\n      selectedContentRatings = [...uniqueFilters];\n      this.setState({\n        selectedContentRatings\n      }, async () => {\n        let filteredVideos = await this.getFilteredVideosByContentRating(this.state.allVideoList, this.state.selectedContentRatings);\n        if (selectedContentRatings.length === 0) {\n          filteredVideos = this.state.allVideoList;\n        }\n        this.setState({\n          videoList: filteredVideos\n        });\n      });\n      console.log(this.state.videoList);\n    };\n    this.getFilteredVideosByGenre = (videos, genres) => {\n      let filteredVideos = [];\n      genres.map(genre => {\n        if (genre === \"all\") {\n          filteredVideos = videos;\n          return filteredVideos;\n        }\n        filteredVideos = [...filteredVideos, ...videos.filter(video => video.genre === genre)];\n      });\n      return filteredVideos;\n    };\n    this.getFilteredVideosByContentRating = (videos, contentRatings) => {\n      let filteredVideos = [];\n      contentRatings.map(contentRating => {\n        if (contentRatings === \"anyone\") {\n          filteredVideos = videos;\n          return filteredVideos;\n        }\n        filteredVideos = [...filteredVideos, ...videos.filter(video => video.contentRating === contentRating)];\n      });\n      return filteredVideos;\n    };\n    this.setSortBy = e => {\n      this.setState({\n        sortBy: e.target.value\n      }, () => {\n        this.performAPICall();\n        console.log(this.state.sortBy);\n      });\n    };\n    this.state = {\n      visible: false,\n      confirmLoading: false,\n      loading: false,\n      filteredVideos: [],\n      searchText: null,\n      selectedVideo: null,\n      sortBy: \"releaseDate\",\n      videoList: [],\n      allVideoList: [],\n      selectedGenres: [\"all\"],\n      allGenres: [{\n        label: \"All\",\n        value: \"all\"\n      }, {\n        label: \"Education\",\n        value: \"Education\"\n      }, {\n        label: \"Sports\",\n        value: \"Sports\"\n      }, {\n        label: \"Comedy\",\n        value: \"Comedy\"\n      }, {\n        label: \"Lifestyle\",\n        value: \"Lifestyle\"\n      }],\n      allContentRatings: [{\n        label: \"Anyone\",\n        value: \"Anyone\"\n      }, {\n        label: \"7+\",\n        value: \"7plus\"\n      }, {\n        label: \"12+\",\n        value: \"12+\"\n      }, {\n        label: \"16+\",\n        value: \"16+\"\n      }, {\n        label: \"18+\",\n        value: \"18+\"\n      }],\n      selectedContentRatings: []\n    };\n    // this.allVideos = [];\n    // this.sortedVideos = [];\n    // this.videoData =[];\n    // this.rating = \"\";\n    // this.genre = [];\n    // this.sort = \"\";\n    // this.search = \"\";\n    // this.allVideoList = [];\n    // this.videoList = [];\n  }\n\n  // getFlteredVideos = async () => {\n  //   console.log(this.search)\n  //   console.log(this.rating)\n  //   console.log(this.genre.toString())\n  //   if(this.sortedVideos.length !== 0){\n  //     console.log(\"sorted present :\", this.sortedVideos)\n  //     if(this.search === \"\" && this.rating === \"\" && this.genre.length === 0){\n  //       this.setState({\n  //         filteredVideos: [...this.sortedVideos],\n  //       });\n  //     }else if(this.search !== \"\" && this.rating === \"\" && this.genre.length === 0){\n  //       const data =  this.sortedVideos.filter(x=> x.title.toLowerCase().includes(this.search.toLowerCase()));\n  //       this.setState({\n  //         filteredVideos: [...data],\n  //       });\n  //     }else if(this.search === \"\" && this.rating !== \"\" && this.genre.length === 0){\n\n  //       const data =  this.sortedVideos.filter((x) => x.contentRating === this.rating);\n  //       this.setState({\n  //         filteredVideos: [...data],\n  //       });\n  //       console.log(data)\n  //     }else if(this.search === \"\" && this.rating === \"\" && this.genre.length !== 0){\n  //       if(this.genre.length >1){\n  //         const data =  this.sortedVideos.filter((x) => {\n  //           for(var i=0;i<this.genre.length;i++){\n  //             if(x.genre === this.genre[i]){\n  //               return x;\n  //             }\n  //           }\n  //         });\n  //         console.log(data)\n  //         this.setState({\n  //           filteredVideos: [...data],\n  //         });\n  //       }else{\n  //         const data =  this.sortedVideos.filter(x=> x.genre === this.genre[0]);\n  //         console.log(data)\n  //         this.setState({\n  //           filteredVideos: [...data],\n  //         });\n  //       }\n  //     }else if(this.search !== \"\" && this.rating !== \"\" && this.genre.length === 0){\n\n  //       const data =  this.sortedVideos.filter(x=> x.title.toLowerCase().includes(this.search.toLowerCase()) && x.contentRating === this.rating);\n  //       this.setState({\n  //         filteredVideos: [...data],\n  //       });\n  //     }else if(this.search !== \"\" && this.rating === \"\" && this.genre.length !== 0){\n  //       if(this.genre.length >1){\n  //         const data =  this.sortedVideos.filter((x) => {\n  //           for(var i=0;i<this.genre.length;i++){\n  //             if(x.genre === this.genre[i] && x.title.toLowerCase().includes(this.search.toLowerCase())){\n  //               return x;\n  //             }\n  //           }\n  //         });\n  //         this.setState({\n  //           filteredVideos: [...data],\n  //         });\n  //       }else{\n  //         const data =  this.sortedVideos.filter(x=> x.genre === this.genre[0] && x.title.toLowerCase().includes(this.search.toLowerCase()));\n  //         this.setState({\n  //           filteredVideos: [...data],\n  //         });\n  //       }\n  //     }else if(this.search === \"\" && this.rating !== \"\" && this.genre.length !== 0){\n\n  //       if(this.genre.length >1){\n  //         const data =  this.sortedVideos.filter((x) => {\n  //           for(var i=0;i<this.genre.length;i++){\n  //             if(x.genre === this.genre[i] && x.contentRating === this.rating){\n  //               return x;\n  //             }\n  //           }\n  //         });\n  //         this.setState({\n  //           filteredVideos: [...data],\n  //         });\n  //       }else{\n  //         const data =  this.sortedVideos.filter(x=> x.genre === this.genre[0] && x.contentRating === this.rating);\n  //         this.setState({\n  //           filteredVideos: [...data],\n  //         });\n  //       }\n  //     }\n  //   }else{\n  //     if(this.search === \"\" && this.rating === \"\" && this.genre.length === 0){\n  //       this.getData();\n  //     }else if(this.search !== \"\" && this.rating === \"\" && this.genre.length === 0){\n  //       console.log(\"fetching/...\")\n  //       const res = await fetch(config.endpoint + \"/videos?title=\"+this.search)\n  //       .then((res) => res.json())\n  //       .catch((error) => console.log(error));\n  //       console.log(\"fetching/...\")\n  //       if (res) {\n  //         console.log(\"fetching/...\")\n  //         this.allVideos = [...res.videos];\n  //         this.setState({\n  //           filteredVideos: [...this.allVideos],\n  //         });\n  //         console.log(\"get sortedVideos :\", this.allVideos);\n  //       }\n  //     }else if(this.search === \"\" && this.rating !== \"\" && this.genre.length === 0){\n\n  //       console.log(this.rating)\n  //       const res = await fetch(config.endpoint + `/videos?contentRating=${this.rating}`)\n  //       .then((res) => res.json())\n  //       .catch((error) => console.log(error));\n  //       console.log(res)\n  //       if (res) {\n  //         this.allVideos = [...res.videos];\n  //         this.setState({\n  //           filteredVideos: [...this.allVideos],\n  //         });\n  //         console.log(\"get sortedVideos :\", this.allVideos);\n  //       }\n  //     }else if(this.search === \"\" && this.rating === \"\" && this.genre.length !== 0){\n  //         const res = await fetch(config.endpoint + `/videos?genres=${this.genre.toString()}`)\n  //         .then((res) => res.json())\n  //         .catch((error) => console.log(error));\n  //         if (res) {\n  //           this.allVideos = [...res.videos];\n  //           this.setState({\n  //             filteredVideos: [...this.allVideos],\n  //           });\n  //           console.log(\"get sortedVideos :\", this.allVideos);\n  //         }\n  //     }else if(this.search !== \"\" && this.rating !== \"\" && this.genre.length !== 0){\n\n  //         const res = await fetch(config.endpoint + `/videos?title=${this.search}&genres=${this.genre.toString()}&contentRating=${this.rating}%22`)\n  //         .then((res) => res.json())\n  //         .catch((error) => console.log(error));\n  //         if (res) {\n  //           this.allVideos = [...res.videos];\n  //           this.setState({\n  //             filteredVideos: [...this.allVideos],\n  //           });\n  //           console.log(\"get sortedVideos :\", this.allVideos);\n  //         }\n  //     }\n  //   }\n  // };\n\n  // getSorted = async(event) => {\n  //   var e = event.target.value;\n  //   this.sort = e;\n  //   if(e === \"viewCount\"){\n  //     const res = await fetch(config.endpoint + \"/videos?sortBy=viewCount\")\n  //     .then((res) => res.json())\n  //     .catch((error) => console.log(error));\n  //     if (res) {\n  //       this.sortedVideos = [...res.videos];\n  //       this.allVideos = [...res.videos];\n  //       this.setState({\n  //         filteredVideos: [...this.sortedVideos],\n  //       });\n  //       console.log(\"sortedVideos :\", this.sortedVideos);\n  //       document.querySelectorAll('#content .active').forEach(function(item) {\n  //         item.classList.remove('active');\n  //       })\n  //       document.querySelectorAll('#genre .active').forEach(function(item) {\n  //         item.classList.remove('active');\n  //       })\n  //       this.rating = \"\"\n  //       this.genre = []\n\n  //     }\n  //   }else{\n  //     const res = await fetch(config.endpoint + \"/videos\")\n  //     .then((res) => res.json())\n  //     .catch((error) => console.log(error));\n  //     if (res) {\n  //       this.sortedVideos = [...res.videos];\n  //       this.allVideos = [...res.videos];\n  //       this.setState({\n  //         filteredVideos: [...this.sortedVideos],\n  //       });\n  //       console.log(\"sortedVideos :\", this.sortedVideos);\n  //       document.querySelectorAll('#content .active').forEach(function(item) {\n  //         item.classList.remove('active');\n  //       })\n  //       document.querySelectorAll('#genre .active').forEach(function(item) {\n  //         item.classList.remove('active');\n  //       })\n  //       this.rating = \"\"\n  //       this.genre = []\n\n  //     }\n  //   }\n  // };\n\n  // sortByRating = (event) => {\n  //   if (document.querySelector('#content .active') !== null) {\n  //     document.querySelector('#content .active').classList.remove('active');\n  //   }\n  //   event.target.className += \" active\";\n  //   this.rating = event.target.value;\n  //   if(this.rating === \"Anyone\"){\n\n  //   }else if(this.sortedVideos.length !== 0){\n  //     this.rating = this.rating+\"+\";\n  //   }else if(this.sortedVideos.length === 0){\n  //     this.rating = this.rating+\"%22\";\n  //   }\n\n  //   this.getFlteredVideos();\n  // };\n\n  // sortByGenre = (event) => {\n  //   var val = event.target.value;\n  //   if(val === \"\"){\n  //     document.querySelectorAll('#genre .active').forEach(function(item) {\n  //       item.classList.remove('active');\n  //     })\n  //     event.target.className += \" active\";\n  //     this.genre = []\n  //   }else{\n  //     const check = this.genre.includes(val);\n  //         if (!check && this.genre.length === 0) {\n  //           if (document.querySelector('#genre .active') !== null) {\n  //             document.querySelector('#genre .active').classList.remove('active');\n  //           }\n  //           event.target.className += \" active\";\n  //           this.genre.push(val);\n  //         }else if(!check){\n  //           event.target.className += \" active\";\n  //           this.genre.push(val);\n  //         }else{\n  //           event.target.className = 'genre-btn';\n  //           for(var i=0;i<this.genre.length;i++){\n  //             if(this.genre[i]=== val){\n  //               this.genre.splice(i, 1);\n  //             }\n  //           }\n  //           console.log(this.genre)\n  //         }\n  //   }\n  //   this.getFlteredVideos();\n  // };\n\n  // debounceSearch = (event) => {\n  //   let val = event.target.value;\n  //   console.log(val)\n  //   const later = () => {\n  //     clearTimeout(this.debounceTimeout);\n  //     this.searchFunction(val);\n  //   };\n\n  //   clearTimeout(this.debounceTimeout);\n  //   this.debounceTimeout = setTimeout(later, 300);\n\n  // };\n\n  // searchFunction = (text) => {\n  //   this.setState({\n  //     searchText: text\n  //   });\n\n  //   // this.getFlteredVideos();  \n  // };\n\n  componentDidMount() {\n    this.performAPICall();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        history: this.history,\n        search: /*#__PURE__*/_jsxDEV(Input.Search, {\n          className: 'ant-input-search',\n          placeholder: \"Search\",\n          onChange: this.handleSearchInput.bind(this)\n          // onSearch={this.handleSearchInput.bind(this)} \n          ,\n          enterButton: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 13\n        }, this),\n        upload: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          id: \"upload-btn\",\n          onClick: this.showModal.bind(this),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"upload_24px.svg\",\n            className: \"upload-img\",\n            alt: \"upload_icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"upload-text\",\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 87\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"Upload video\",\n        visible: this.state.visible,\n        onCancel: this.handleCancel.bind(this),\n        footer: null,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          name: \"upload-form\",\n          method: \"post\",\n          onFinish: this.handleOk.bind(this),\n          layout: \"horizontal\",\n          size: \"large\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            rules: [{\n              required: true,\n              message: 'Video link is required!'\n            }]\n            // rules={[{ required: true, message: `Please enter your name.` }]}\n            ,\n            name: \"video-link\",\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Video link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            rules: [{\n              required: true,\n              message: `Thumbnail link is required!`\n            }],\n            name: \"thumbnail\",\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Thumbnail image link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            rules: [{\n              required: true,\n              message: `Title is required!`\n            }],\n            name: \"title\",\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            rules: [{\n              required: true,\n              message: `Genre is required!`\n            }],\n            name: \"genre\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              placeholder: \"Genre\",\n              children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n                value: \"Education\",\n                children: \"Education\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 627,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: \"Sports\",\n                children: \"Sports\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: \"Comedy\",\n                children: \"Comedy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: \"Lifestyle\",\n                children: \"Lifestyle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 630,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            rules: [{\n              required: true,\n              message: `Age group is required!`\n            }],\n            name: \"age\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              placeholder: \"Suitable age group for the clip\",\n              children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n                value: \"Anyone\",\n                children: \"Any age group\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: \"7+\",\n                children: \"7+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: \"12+\",\n                children: \"12+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 640,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: \"16+\",\n                children: \"16+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 641,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: \"18+\",\n                children: \"18+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 642,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Upload and Publish date\",\n            rules: [{\n              required: true,\n              message: `Upload and Publish date is required!`\n            }],\n            name: \"date\",\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              id: \"upload-btn-submit\",\n              htmlType: \"submit\",\n              disabled: false,\n              loading: this.state.confirmLoading,\n              children: \"Upload Video\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"upload-btn-cancel\",\n              onClick: this.handleCancel.bind(this),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool-bar\",\n          children: [this.state.allGenres.map((genre, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => this.handleGenreChange(genre),\n            className: this.state.selectedGenres.includes(genre.value) ? \"active-toolbar-button genre-btn\" : \"toolbar-button genre-btn\",\n            id: genre.value,\n            children: genre.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 11\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toolbar-button-sort\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                path: mdiSwapVertical,\n                size: 1,\n                color: \"#999\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 680,\n                columnNumber: 13\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 679,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginRight: \"10px\"\n              },\n              children: \" Sort By\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: this.setSortBy,\n              className: \"sort-select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"releaseDate\",\n                id: \"release-date-option\",\n                className: \"select-option\",\n                children: \"Upload Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 684,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"viewCount\",\n                id: \"view-count-option\",\n                className: \"select-option\",\n                children: \"Views\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool-bar\",\n          style: {\n            paddingBottom: \"20px\"\n          },\n          children: this.state.allContentRatings.map((contentRating, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => this.handleContentRatingChange(contentRating),\n            className: this.state.selectedContentRatings.includes(contentRating.value) ? \"active-toolbar-button content-rating-btn\" : \"toolbar-button content-rating-btn\",\n            id: contentRating.value,\n            children: contentRating.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"main-body\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"second-row\",\n            gutter: {\n              xs: 8,\n              sm: 16,\n              md: 24,\n              lg: 24\n            },\n            justify: \"center\",\n            children: this.state.allVideoList.length !== 0 ? this.state.videoList.map(data => this.getDashboard(data)) : this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-text\",\n              children: \"Loading videos...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 712,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-text\",\n              children: \"No videos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default _c = withRouter(Home);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","Component","withRouter","Header","Dashboard","config","Input","Button","Row","Col","moment","Grid","Form","Select","DatePicker","Modal","mdiSwapVertical","Icon","jsxDEV","_jsxDEV","Home","constructor","props","showModal","setState","visible","handleOk","values","console","log","date","format","confirmLoading","res","fetch","endpoint","method","headers","body","JSON","stringify","toString","then","json","catch","error","handleCancel","e","getDashboard","data","children","allData","state","allVideoList","fileName","_jsxFileName","lineNumber","columnNumber","_id","handleSearchInput","evt","target","value","searchText","filteredVideos","filter","x","title","toLowerCase","includes","length","videoList","performAPICall","_this$state$searchTex","response","URL","sortBy","ok","videos","getFilteredVideosByGenre","selectedGenres","handleGenreChange","genre","selectedContentRatings","uniqueFilters","Set","elem","push","handleContentRatingChange","contentRating","getFilteredVideosByContentRating","genres","map","video","contentRatings","setSortBy","loading","selectedVideo","allGenres","label","allContentRatings","componentDidMount","render","history","search","Search","className","placeholder","onChange","bind","enterButton","upload","type","id","onClick","src","alt","onCancel","footer","name","onFinish","layout","size","Item","rules","required","message","Option","htmlType","disabled","container","idx","path","color","style","marginRight","paddingBottom","gutter","xs","sm","md","lg","justify","_c","$RefreshReg$"],"sources":["/Users/hasanshaikh/Downloads/shasan419-me_buildout_xflix_react-master 2/frontend/src/Components/Home.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Header from \"./Header.js\";\nimport Dashboard from \"./Dashboard.js\";\nimport { config } from \"../App\";\nimport {  Input, Button, Row, Col } from \"antd\";\nimport \"./Home.css\";\nimport moment from \"moment\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Form,Select,DatePicker,Modal} from \"antd\";\nimport { mdiSwapVertical } from \"@mdi/js\";\nimport Icon from \"@mdi/react\";\n// import UploadModal from \"./UploadModal\"\n\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      confirmLoading: false,\n      loading: false,\n      filteredVideos: [],\n      searchText: null,\n      selectedVideo: null,\n      sortBy: \"releaseDate\",\n      videoList: [],\n      allVideoList: [],\n      selectedGenres: [\"all\"],\n      allGenres: [\n        { label: \"All\", value: \"all\" },\n        { label: \"Education\", value: \"Education\" },\n        { label: \"Sports\", value: \"Sports\" },\n        { label: \"Comedy\", value: \"Comedy\" },\n        { label: \"Lifestyle\", value: \"Lifestyle\" },\n      ],\n      allContentRatings: [\n        { label: \"Anyone\", value: \"Anyone\" },\n        { label: \"7+\", value: \"7plus\" },\n        { label: \"12+\", value: \"12+\" },\n        { label: \"16+\", value: \"16+\" },\n        { label: \"18+\", value: \"18+\" },\n      ],\n      selectedContentRatings: [],\n    };\n    // this.allVideos = [];\n    // this.sortedVideos = [];\n    // this.videoData =[];\n    // this.rating = \"\";\n    // this.genre = [];\n    // this.sort = \"\";\n    // this.search = \"\";\n    // this.allVideoList = [];\n    // this.videoList = [];\n\n  }\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleOk = async(values) => {\n    console.log(values['video-link'])\n    console.log(values['thumbnail'])\n    console.log(values['age'])\n    console.log(values['title'])\n\n    const date = moment(values['date']).format(\"DD MMM YYYY\")\n    console.log(date)\n    this.setState({\n      confirmLoading: true,\n    });\n    const res = await fetch(config.endpoint + \"/videos\", {\n      method:'POST',\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\"\n      },\n      body: JSON.stringify({\n          \"videoLink\": values['video-link'],\n          \"title\": values['title'],\n          \"genre\": values['genre'],\n          \"contentRating\": values['age'],\n          \"releaseDate\": date.toString(),\n          \"previewImage\":values['thumbnail'] \n      })\n      }).then(res => {\n        this.setState({\n          visible: false,\n          confirmLoading: false\n        });\n        return res.json()})\n      .catch(error => console.log(error));\n    console.log(res)\n  }\n\n  handleCancel = (e) => {\n    console.log(e);\n    this.setState({\n      visible: false,\n    });\n  };\n\n  // getData = async () => {\n  //   const res = await this.fetchVideos();\n  //   if (res) {\n      // this.allVideos = [...res.videos];\n      // this.videoData = [...res.videos];\n\n      // this.setState({\n      //   allVideoList:[...this.res.videos],\n      //   filteredVideos: [...this.res.videos],\n      // });\n      // console.log(\"allVideos :\", this.allVideoList);\n      // document.querySelectorAll('#content .active').forEach(function(item) {\n      //   item.classList.remove('active');\n      // })\n      // document.querySelectorAll('#genre .active').forEach(function(item) {\n      //   item.classList.remove('active');\n      // })\n  //   }\n  // };\n\n  // fetchVideos = async () => {\n  //   const resp = await fetch(config.endpoint + \"/videos\")\n  //     .then((res) => res.json())\n  //     .catch((error) => console.log(error));\n  //   console.log(resp);\n  //   if (!resp) {\n  //     return null;\n  //   } else {\n  //     return resp;\n  //   }\n  // };\n\n  getDashboard = (data) => {\n    return (\n      <Col key={data._id}>\n        <Dashboard data={data} allData ={this.state.allVideoList} />\n      </Col>\n    );\n  };\n\n  // getFlteredVideos = async () => {\n  //   console.log(this.search)\n  //   console.log(this.rating)\n  //   console.log(this.genre.toString())\n  //   if(this.sortedVideos.length !== 0){\n  //     console.log(\"sorted present :\", this.sortedVideos)\n  //     if(this.search === \"\" && this.rating === \"\" && this.genre.length === 0){\n  //       this.setState({\n  //         filteredVideos: [...this.sortedVideos],\n  //       });\n  //     }else if(this.search !== \"\" && this.rating === \"\" && this.genre.length === 0){\n  //       const data =  this.sortedVideos.filter(x=> x.title.toLowerCase().includes(this.search.toLowerCase()));\n  //       this.setState({\n  //         filteredVideos: [...data],\n  //       });\n  //     }else if(this.search === \"\" && this.rating !== \"\" && this.genre.length === 0){\n\n  //       const data =  this.sortedVideos.filter((x) => x.contentRating === this.rating);\n  //       this.setState({\n  //         filteredVideos: [...data],\n  //       });\n  //       console.log(data)\n  //     }else if(this.search === \"\" && this.rating === \"\" && this.genre.length !== 0){\n  //       if(this.genre.length >1){\n  //         const data =  this.sortedVideos.filter((x) => {\n  //           for(var i=0;i<this.genre.length;i++){\n  //             if(x.genre === this.genre[i]){\n  //               return x;\n  //             }\n  //           }\n  //         });\n  //         console.log(data)\n  //         this.setState({\n  //           filteredVideos: [...data],\n  //         });\n  //       }else{\n  //         const data =  this.sortedVideos.filter(x=> x.genre === this.genre[0]);\n  //         console.log(data)\n  //         this.setState({\n  //           filteredVideos: [...data],\n  //         });\n  //       }\n  //     }else if(this.search !== \"\" && this.rating !== \"\" && this.genre.length === 0){\n        \n  //       const data =  this.sortedVideos.filter(x=> x.title.toLowerCase().includes(this.search.toLowerCase()) && x.contentRating === this.rating);\n  //       this.setState({\n  //         filteredVideos: [...data],\n  //       });\n  //     }else if(this.search !== \"\" && this.rating === \"\" && this.genre.length !== 0){\n  //       if(this.genre.length >1){\n  //         const data =  this.sortedVideos.filter((x) => {\n  //           for(var i=0;i<this.genre.length;i++){\n  //             if(x.genre === this.genre[i] && x.title.toLowerCase().includes(this.search.toLowerCase())){\n  //               return x;\n  //             }\n  //           }\n  //         });\n  //         this.setState({\n  //           filteredVideos: [...data],\n  //         });\n  //       }else{\n  //         const data =  this.sortedVideos.filter(x=> x.genre === this.genre[0] && x.title.toLowerCase().includes(this.search.toLowerCase()));\n  //         this.setState({\n  //           filteredVideos: [...data],\n  //         });\n  //       }\n  //     }else if(this.search === \"\" && this.rating !== \"\" && this.genre.length !== 0){\n\n  //       if(this.genre.length >1){\n  //         const data =  this.sortedVideos.filter((x) => {\n  //           for(var i=0;i<this.genre.length;i++){\n  //             if(x.genre === this.genre[i] && x.contentRating === this.rating){\n  //               return x;\n  //             }\n  //           }\n  //         });\n  //         this.setState({\n  //           filteredVideos: [...data],\n  //         });\n  //       }else{\n  //         const data =  this.sortedVideos.filter(x=> x.genre === this.genre[0] && x.contentRating === this.rating);\n  //         this.setState({\n  //           filteredVideos: [...data],\n  //         });\n  //       }\n  //     }\n  //   }else{\n  //     if(this.search === \"\" && this.rating === \"\" && this.genre.length === 0){\n  //       this.getData();\n  //     }else if(this.search !== \"\" && this.rating === \"\" && this.genre.length === 0){\n  //       console.log(\"fetching/...\")\n  //       const res = await fetch(config.endpoint + \"/videos?title=\"+this.search)\n  //       .then((res) => res.json())\n  //       .catch((error) => console.log(error));\n  //       console.log(\"fetching/...\")\n  //       if (res) {\n  //         console.log(\"fetching/...\")\n  //         this.allVideos = [...res.videos];\n  //         this.setState({\n  //           filteredVideos: [...this.allVideos],\n  //         });\n  //         console.log(\"get sortedVideos :\", this.allVideos);\n  //       }\n  //     }else if(this.search === \"\" && this.rating !== \"\" && this.genre.length === 0){\n\n  //       console.log(this.rating)\n  //       const res = await fetch(config.endpoint + `/videos?contentRating=${this.rating}`)\n  //       .then((res) => res.json())\n  //       .catch((error) => console.log(error));\n  //       console.log(res)\n  //       if (res) {\n  //         this.allVideos = [...res.videos];\n  //         this.setState({\n  //           filteredVideos: [...this.allVideos],\n  //         });\n  //         console.log(\"get sortedVideos :\", this.allVideos);\n  //       }\n  //     }else if(this.search === \"\" && this.rating === \"\" && this.genre.length !== 0){\n  //         const res = await fetch(config.endpoint + `/videos?genres=${this.genre.toString()}`)\n  //         .then((res) => res.json())\n  //         .catch((error) => console.log(error));\n  //         if (res) {\n  //           this.allVideos = [...res.videos];\n  //           this.setState({\n  //             filteredVideos: [...this.allVideos],\n  //           });\n  //           console.log(\"get sortedVideos :\", this.allVideos);\n  //         }\n  //     }else if(this.search !== \"\" && this.rating !== \"\" && this.genre.length !== 0){\n \n  //         const res = await fetch(config.endpoint + `/videos?title=${this.search}&genres=${this.genre.toString()}&contentRating=${this.rating}%22`)\n  //         .then((res) => res.json())\n  //         .catch((error) => console.log(error));\n  //         if (res) {\n  //           this.allVideos = [...res.videos];\n  //           this.setState({\n  //             filteredVideos: [...this.allVideos],\n  //           });\n  //           console.log(\"get sortedVideos :\", this.allVideos);\n  //         }\n  //     }\n  //   }\n  // };\n\n  // getSorted = async(event) => {\n  //   var e = event.target.value;\n  //   this.sort = e;\n  //   if(e === \"viewCount\"){\n  //     const res = await fetch(config.endpoint + \"/videos?sortBy=viewCount\")\n  //     .then((res) => res.json())\n  //     .catch((error) => console.log(error));\n  //     if (res) {\n  //       this.sortedVideos = [...res.videos];\n  //       this.allVideos = [...res.videos];\n  //       this.setState({\n  //         filteredVideos: [...this.sortedVideos],\n  //       });\n  //       console.log(\"sortedVideos :\", this.sortedVideos);\n  //       document.querySelectorAll('#content .active').forEach(function(item) {\n  //         item.classList.remove('active');\n  //       })\n  //       document.querySelectorAll('#genre .active').forEach(function(item) {\n  //         item.classList.remove('active');\n  //       })\n  //       this.rating = \"\"\n  //       this.genre = []\n\n  //     }\n  //   }else{\n  //     const res = await fetch(config.endpoint + \"/videos\")\n  //     .then((res) => res.json())\n  //     .catch((error) => console.log(error));\n  //     if (res) {\n  //       this.sortedVideos = [...res.videos];\n  //       this.allVideos = [...res.videos];\n  //       this.setState({\n  //         filteredVideos: [...this.sortedVideos],\n  //       });\n  //       console.log(\"sortedVideos :\", this.sortedVideos);\n  //       document.querySelectorAll('#content .active').forEach(function(item) {\n  //         item.classList.remove('active');\n  //       })\n  //       document.querySelectorAll('#genre .active').forEach(function(item) {\n  //         item.classList.remove('active');\n  //       })\n  //       this.rating = \"\"\n  //       this.genre = []\n\n  //     }\n  //   }\n  // };\n\n  // sortByRating = (event) => {\n  //   if (document.querySelector('#content .active') !== null) {\n  //     document.querySelector('#content .active').classList.remove('active');\n  //   }\n  //   event.target.className += \" active\";\n  //   this.rating = event.target.value;\n  //   if(this.rating === \"Anyone\"){\n\n  //   }else if(this.sortedVideos.length !== 0){\n  //     this.rating = this.rating+\"+\";\n  //   }else if(this.sortedVideos.length === 0){\n  //     this.rating = this.rating+\"%22\";\n  //   }\n\n  //   this.getFlteredVideos();\n  // };\n\n  // sortByGenre = (event) => {\n  //   var val = event.target.value;\n  //   if(val === \"\"){\n  //     document.querySelectorAll('#genre .active').forEach(function(item) {\n  //       item.classList.remove('active');\n  //     })\n  //     event.target.className += \" active\";\n  //     this.genre = []\n  //   }else{\n  //     const check = this.genre.includes(val);\n  //         if (!check && this.genre.length === 0) {\n  //           if (document.querySelector('#genre .active') !== null) {\n  //             document.querySelector('#genre .active').classList.remove('active');\n  //           }\n  //           event.target.className += \" active\";\n  //           this.genre.push(val);\n  //         }else if(!check){\n  //           event.target.className += \" active\";\n  //           this.genre.push(val);\n  //         }else{\n  //           event.target.className = 'genre-btn';\n  //           for(var i=0;i<this.genre.length;i++){\n  //             if(this.genre[i]=== val){\n  //               this.genre.splice(i, 1);\n  //             }\n  //           }\n  //           console.log(this.genre)\n  //         }\n  //   }\n  //   this.getFlteredVideos();\n  // };\n\n  // debounceSearch = (event) => {\n  //   let val = event.target.value;\n  //   console.log(val)\n  //   const later = () => {\n  //     clearTimeout(this.debounceTimeout);\n  //     this.searchFunction(val);\n  //   };\n\n  //   clearTimeout(this.debounceTimeout);\n  //   this.debounceTimeout = setTimeout(later, 300);\n    \n  // };\n\n  // searchFunction = (text) => {\n  //   this.setState({\n  //     searchText: text\n  //   });\n    \n  //   // this.getFlteredVideos();  \n  // };\n\n  componentDidMount() {\n    this.performAPICall();\n  }\n\n//   ModalRef = ({showModal}) => {\n//     this.showModal = showModal;\n//  }\n \n//  openModal = () => {\n//    this.showModal();\n//  }\n\nhandleSearchInput = async(evt) => {\n  console.log(evt.target.value)\n  let value = evt.target.value;\n  this.setState({ searchText: value });\n  let filteredVideos = await this.state.allVideoList.filter((x) => {\n    if(x.title.toLowerCase().includes(value.toLowerCase())){\n      return x\n    }\n  })\n  if (this.state.searchText.length === 0) { filteredVideos = this.state.allVideoList }\n\n  this.setState({videoList: filteredVideos,})\n};\n\nperformAPICall = async () => {\n  let response;\n  let URL = `${config.endpoint}/videos`;\n\n\n  if (this.state.searchText?.length > 0) {\n    console.log(\"both sortBy and search \",this.state.sortBy + \"   \"+ this.state.searchText)\n\n    URL += `?title=${this.state.searchText}`;\n    URL += `&sortBy=${this.state.sortBy}`\n  }\n  else {\n    console.log(\"only sortBy \",this.state.sortBy)\n    URL += `?sortBy=${this.state.sortBy}`\n  }\n\n  response = await fetch(\n    URL\n  );\n  if (!response.ok) {\n    return;\n  }\n  response = await response.json();\n\n  this.setState({allVideoList: response.videos})\n\n  let filteredVideos = await this.getFilteredVideosByGenre(\n    response.videos,\n    this.state.selectedGenres\n  );\n  console.log(this.state.allVideoList)\n  this.setState({videoList: filteredVideos,})\n  return filteredVideos;\n};\n\nhandleGenreChange = async (genre) => {\n  this.setState({ selectedContentRatings: [] })\n  let selectedGenres = this.state.selectedGenres;\n  let uniqueFilters = new Set(selectedGenres);\n  selectedGenres = [...uniqueFilters];\n\n  if (genre.value === \"all\") {\n    if (selectedGenres.includes(genre.value)) {\n    } else {\n      selectedGenres = [\"all\"];\n    }\n  } else {\n    if (this.state.selectedGenres.includes(genre.value)) {\n      selectedGenres = selectedGenres.filter(\n        (elem) => elem !== \"all\" && elem !== genre.value\n      );\n    } else {\n      selectedGenres = selectedGenres.filter((elem) => elem !== \"all\");\n      selectedGenres.push(genre.value);\n    }\n  }\n  uniqueFilters = new Set(selectedGenres);\n  selectedGenres = [...uniqueFilters];\n  if (selectedGenres.length === 0) {\n    selectedGenres.push(\"all\");\n  }\n  this.setState({ selectedGenres }, async () => {\n    let filteredVideos = await this.getFilteredVideosByGenre(\n      this.state.allVideoList,\n      this.state.selectedGenres\n    );\n    this.setState({videoList: filteredVideos,})\n  });\n  console.log(this.state.videoList)\n};\n\nhandleContentRatingChange = async (contentRating) => {\n  this.setState({ selectedGenres: [\"all\"] })\n\n  let selectedContentRatings = this.state.selectedContentRatings;\n  let uniqueFilters = new Set(selectedContentRatings);\n  selectedContentRatings = [...uniqueFilters];\n\n\n  if (this.state.selectedContentRatings.includes(contentRating.value)) {\n    selectedContentRatings = selectedContentRatings.filter(\n      (elem) => elem !== contentRating.value\n    );\n  } else {\n    selectedContentRatings.push(contentRating.value);\n  }\n\n\n  uniqueFilters = new Set(selectedContentRatings);\n  selectedContentRatings = [...uniqueFilters];\n  this.setState({ selectedContentRatings }, async () => {\n    let filteredVideos = await this.getFilteredVideosByContentRating(\n      this.state.allVideoList,\n      this.state.selectedContentRatings\n    );\n    if (selectedContentRatings.length === 0) { filteredVideos = this.state.allVideoList }\n\n    this.setState({videoList: filteredVideos,})\n  });\n  console.log(this.state.videoList)\n};\n\ngetFilteredVideosByGenre = (videos, genres) => {\n  let filteredVideos = [];\n\n  genres.map((genre) => {\n    if (genre === \"all\") {\n      filteredVideos = videos;\n      return filteredVideos;\n    }\n    filteredVideos = [\n      ...filteredVideos,\n      ...videos.filter((video) => video.genre === genre),\n    ];\n  });\n  return filteredVideos;\n};\n\ngetFilteredVideosByContentRating = (videos, contentRatings) => {\n  let filteredVideos = [];\n\n  contentRatings.map((contentRating) => {\n    if (contentRatings === \"anyone\") {\n      filteredVideos = videos;\n      return filteredVideos;\n    }\n    filteredVideos = [\n      ...filteredVideos,\n      ...videos.filter((video) => video.contentRating === contentRating),\n    ];\n  });\n  return filteredVideos;\n};\n\n\nsetSortBy = (e) => {\n  this.setState({ sortBy: e.target.value }, () => { this.performAPICall(); console.log(this.state.sortBy)})\n\n}\n  render() {\n    return (\n      <div>\n         <Header  history={this.history}      \n          search = {\n\n            <Input.Search className={'ant-input-search'} placeholder=\"Search\" \n            onChange={this.handleSearchInput.bind(this)} \n            // onSearch={this.handleSearchInput.bind(this)} \n            enterButton />\n\n          } \n          upload = { \n           <Button type=\"primary\" id=\"upload-btn\" onClick={this.showModal.bind(this)}>\n            <img src=\"upload_24px.svg\" className=\"upload-img\" alt=\"upload_icon\"></img><span className=\"upload-text\">Upload</span>\n          </Button>\n          }  \n          />\n        {/* <UploadModal ref={this.ModalRef.bind(this)}></UploadModal> */}\n        <Modal title=\"Upload video\" visible={this.state.visible} onCancel={this.handleCancel.bind(this)} footer={null}>\n      <Form\n        name=\"upload-form\"\n        method=\"post\"\n        onFinish={this.handleOk.bind(this)}\n        layout=\"horizontal\"\n        size={\"large\"}\n      >\n      <Form.Item \n       rules={[\n        {\n          required: true,\n          message: 'Video link is required!',\n        },\n      ]}\n      // rules={[{ required: true, message: `Please enter your name.` }]}\n      name=\"video-link\">\n        <Input placeholder=\"Video link\"/>\n        {/* This link will be used to derive video */}\n      </Form.Item>\n      <Form.Item  \n      rules={[{ required: true, message: `Thumbnail link is required!` }]}\n      name=\"thumbnail\">\n        <Input placeholder=\"Thumbnail image link\"/>\n        {/* This link will be used to preview thumbnail image */}\n      </Form.Item>\n      <Form.Item  \n      rules={[{ required: true,  message: `Title is required!` }]}\n      name=\"title\">\n        <Input placeholder=\"Title\"/>\n        {/* The title will be representative text for video */}\n      </Form.Item>\n      <Form.Item \n      rules={[{ required: true, message: `Genre is required!` }]}\n      name=\"genre\">\n        <Select placeholder=\"Genre\">\n          <Select.Option value=\"Education\">Education</Select.Option>\n          <Select.Option value=\"Sports\">Sports</Select.Option>\n          <Select.Option value=\"Comedy\">Comedy</Select.Option>\n          <Select.Option value=\"Lifestyle\">Lifestyle</Select.Option>\n        </Select>\n        {/* Genre will be used to categorize video */}\n      </Form.Item>\n      <Form.Item \n      rules={[{ required: true, message: `Age group is required!` }]}\n      name=\"age\">\n        <Select placeholder=\"Suitable age group for the clip\">\n          <Select.Option value=\"Anyone\">Any age group</Select.Option>\n          <Select.Option value=\"7+\">7+</Select.Option>\n          <Select.Option value=\"12+\">12+</Select.Option>\n          <Select.Option value=\"16+\">16+</Select.Option>\n          <Select.Option value=\"18+\">18+</Select.Option>\n        </Select>\n        {/* This will be used to filter videos on age group suitability */}\n      </Form.Item>\n      <Form.Item label=\"Upload and Publish date\" \n      rules={[{ required: true, message: `Upload and Publish date is required!` }]}\n      name=\"date\">\n        <DatePicker />\n        {/* <p>This will be used to filter videos on age group suitability</p> */}\n      </Form.Item>\n      <Form.Item >\n      <Button type=\"primary\" id=\"upload-btn-submit\" htmlType=\"submit\" disabled={false} loading={this.state.confirmLoading}>\n          Upload Video\n      </Button>\n      <Button id=\"upload-btn-cancel\" onClick={this.handleCancel.bind(this)}>\n          Cancel\n      </Button>\n      </Form.Item>\n      </Form>\n      </Modal>\n\n      <Grid container>\n      <div className=\"tool-bar\">\n        {this.state.allGenres.map((genre, idx) => (\n          <div\n            onClick={() => this.handleGenreChange(genre)}\n            className={\n              this.state.selectedGenres.includes(genre.value)\n                ? \"active-toolbar-button genre-btn\"\n                : \"toolbar-button genre-btn\"\n            }\n            id={genre.value}\n          >\n            {genre.label}\n          </div>\n        ))}\n        <div className={\"toolbar-button-sort\"}>\n          <div>\n            <Icon path={mdiSwapVertical} size={1} color=\"#999\" />{\" \"}\n          </div>\n          <div style={{ marginRight: \"10px\" }}> Sort By</div>\n          <select onChange={this.setSortBy} className=\"sort-select\">\n            <option value=\"releaseDate\" id=\"release-date-option\" className=\"select-option\">Upload Date</option>\n            <option value=\"viewCount\" id=\"view-count-option\" className=\"select-option\">Views</option>\n          </select>\n        </div>\n      </div>\n      <div className=\"tool-bar\" style={{ paddingBottom: \"20px\" }}>\n        {this.state.allContentRatings.map((contentRating, idx) => (\n          <div\n            onClick={() => this.handleContentRatingChange(contentRating)}\n            className={\n              this.state.selectedContentRatings.includes(contentRating.value)\n                ? \"active-toolbar-button content-rating-btn\"\n                : \"toolbar-button content-rating-btn\"\n            }\n            id={contentRating.value}\n          >\n            {contentRating.label}\n          </div>\n        ))}\n\n      </div>\n        </Grid>\n        <Row className=\"main-body\">\n          <Col>\n            <Row className=\"second-row\" gutter={{ xs: 8, sm: 16, md: 24, lg: 24 }} justify={\"center\"}>\n              {this.state.allVideoList.length !== 0 ? (\n                this.state.videoList.map((data) => this.getDashboard(data))\n              ) : this.state.loading ? (\n                <div className=\"loading-text\">Loading videos...</div>\n              ) : (\n                <div className=\"loading-text\">No videos</div>\n              )}\n            </Row>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Home);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}